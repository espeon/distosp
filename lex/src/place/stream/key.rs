// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `place.stream.key` namespace.
use atrium_api::types::TryFromUnknown;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct RecordData {
    ///Client-declared timestamp when this key was created.
    pub created_at: atrium_api::types::string::Datetime,
    ///The name of the client that created this key.
    #[serde(skip_serializing_if = "core::option::Option::is_none")]
    pub created_by: core::option::Option<String>,
    ///The did:key signing key for the stream.
    pub signing_key: String,
}
pub type Record = atrium_api::types::Object<RecordData>;
impl From<atrium_api::types::Unknown> for RecordData {
    fn from(value: atrium_api::types::Unknown) -> Self {
        Self::try_from_unknown(value).unwrap()
    }
}
